

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jun 06 06:31:25 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204                           
   205                           	psect	idataBANK0
   206  073E                     __pidataBANK0:	
   207                           
   208                           ;initializer for main@F1296
   209  073E  3480               	retlw	128
   210  073F  34C0               	retlw	192
   211  0740  34E0               	retlw	224
   212  0741  34F0               	retlw	240
   213  0742  34F8               	retlw	248
   214  0743  34FC               	retlw	252
   215  0744  34FE               	retlw	254
   216  0745  34FF               	retlw	255
   217  0007                     _PORTC	set	7
   218  0007                     _PORTCbits	set	7
   219  0087                     _TRISC	set	135
   220                           
   221                           ; #config settings
   222  0000                     
   223                           	psect	cinit
   224  07EE                     start_initialization:	
   225  07EE                     __initialization:	
   226                           
   227                           ; Initialize objects allocated to BANK0
   228  07EE  1383               	bcf	3,7	;select IRP bank0
   229  07EF  3032               	movlw	low (__pdataBANK0+8)
   230  07F0  00FD               	movwf	btemp+-1
   231  07F1  3007               	movlw	high __pidataBANK0
   232  07F2  00FE               	movwf	btemp
   233  07F3  303E               	movlw	low __pidataBANK0
   234  07F4  00FF               	movwf	btemp+1
   235  07F5  302A               	movlw	low __pdataBANK0
   236  07F6  0084               	movwf	4
   237  07F7  120A  118A  274A  120A  118A  	fcall	init_ram0
   238  07FC                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  07FC                     __end_of__initialization:	
   242  07FC  0183               	clrf	3
   243  07FD  120A  118A  2F9D   	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	dataBANK0
   246  002A                     __pdataBANK0:	
   247  002A                     main@F1296:	
   248  002A                     	ds	8
   249                           
   250                           	psect	inittext
   251  0746                     init_fetch0:	
   252                           ;	Called with low address in FSR and high address in W
   253                           
   254  0746  087E               	movf	btemp,w
   255  0747  008A               	movwf	10
   256  0748  087F               	movf	btemp+1,w
   257  0749  0082               	movwf	2
   258  074A                     init_ram0:	
   259                           ;Called with:
   260                           ;	high address of idata address in btemp 
   261                           ;	low address of idata address in btemp+1 
   262                           ;	low address of data in FSR
   263                           ;	high address + 1 of data in btemp-1
   264                           
   265  074A  120A  118A  2746  120A  118A  	fcall	init_fetch0
   266  074F  0080               	movwf	0
   267  0750  0A84               	incf	4,f
   268  0751  0804               	movf	4,w
   269  0752  067D               	xorwf	btemp+-1,w
   270  0753  1903               	btfsc	3,2
   271  0754  3400               	retlw	0
   272  0755  0AFF               	incf	btemp+1,f
   273  0756  1903               	btfsc	3,2
   274  0757  0AFE               	incf	btemp,f
   275  0758  2F4A               	goto	init_ram0
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:	
   279  0070                     ?_sendData:	
   280  0070                     ??_sendData:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 1 bytes @ 0x0
   288  0070                     	ds	2
   289  0072                     sendData@data:	
   290                           
   291                           ; 1 bytes @ 0x2
   292  0072                     	ds	1
   293  0073                     sendData@i:	
   294                           
   295                           ; 2 bytes @ 0x3
   296  0073                     	ds	2
   297  0075                     ??_main:	
   298                           
   299                           ; 1 bytes @ 0x5
   300  0075                     	ds	4
   301                           
   302                           	psect	cstackBANK0
   303  0020                     __pcstackBANK0:	
   304  0020                     main@led:	
   305                           
   306                           ; 8 bytes @ 0x0
   307  0020                     	ds	8
   308  0028                     main@i:	
   309                           
   310                           ; 2 bytes @ 0x8
   311  0028                     	ds	2
   312                           
   313                           	psect	maintext
   314  079D                     __pmaintext:	
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 51 in file "newmain.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;  i               2    8[BANK0 ] int 
   325 ;;  led             8    0[BANK0 ] unsigned char [8]
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : B00/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   335 ;;      Params:         0       0       0       0       0
   336 ;;      Locals:         0      10       0       0       0
   337 ;;      Temps:          4       0       0       0       0
   338 ;;      Totals:         4      10       0       0       0
   339 ;;Total ram usage:       14 bytes
   340 ;; Hardware stack levels required when called:    1
   341 ;; This function calls:
   342 ;;		_sendData
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           
   349                           ;psect for function _main
   350  079D                     _main:	
   351  079D                     l683:	
   352                           ;incstack = 0
   353                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   354                           
   355                           
   356                           ;newmain.c: 52:     TRISC = 0x00;
   357  079D  1683               	bsf	3,5	;RP0=1, select bank1
   358  079E  1303               	bcf	3,6	;RP1=0, select bank1
   359  079F  0187               	clrf	7	;volatile
   360                           
   361                           ;newmain.c: 53:     PORTC = 0x00;
   362  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   363  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   364  07A2  0187               	clrf	7	;volatile
   365  07A3                     l685:	
   366                           
   367                           ;newmain.c: 55:     uint8_t led[8]={0b10000000, 0b11000000,0b11100000,0b11110000,0b11111
      +                          000, 0b11111100, 0b11111110, 0b11111111};
   368  07A3  3020               	movlw	main@led& (0+255)
   369  07A4  0084               	movwf	4
   370  07A5  302A               	movlw	low main@F1296
   371  07A6  00F5               	movwf	??_main
   372  07A7  0804               	movf	4,w
   373  07A8  00F6               	movwf	??_main+1
   374  07A9  3008               	movlw	8
   375  07AA  00F7               	movwf	??_main+2
   376  07AB                     u70:	
   377  07AB  0875               	movf	??_main,w
   378  07AC  0084               	movwf	4
   379  07AD  1383               	bcf	3,7	;select IRP bank0
   380  07AE  0800               	movf	0,w
   381  07AF  00F8               	movwf	??_main+3
   382  07B0  0AF5               	incf	??_main,f
   383  07B1  0876               	movf	??_main+1,w
   384  07B2  0084               	movwf	4
   385  07B3  0878               	movf	??_main+3,w
   386  07B4  0080               	movwf	0
   387  07B5  0AF6               	incf	??_main+1,f
   388  07B6  0BF7               	decfsz	??_main+2,f
   389  07B7  2FAB               	goto	u70
   390  07B8                     l687:	
   391                           
   392                           ;newmain.c: 58:          for(int i=0;i<8;i++) {
   393  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   394  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   395  07BA  01A8               	clrf	main@i
   396  07BB  01A9               	clrf	main@i+1
   397  07BC                     l693:	
   398                           
   399                           ;newmain.c: 59:              sendData(led[i]);
   400  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   401  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   402  07BE  0828               	movf	main@i,w
   403  07BF  3E20               	addlw	(low (main@led| 0))& (0+255)
   404  07C0  0084               	movwf	4
   405  07C1  1383               	bcf	3,7	;select IRP bank0
   406  07C2  0800               	movf	0,w
   407  07C3  120A  118A  2759  120A  118A  	fcall	_sendData
   408  07C8                     l695:	
   409                           
   410                           ;newmain.c: 60:              _delay((unsigned long)((500)*(4000000/4000.0)));
   411  07C8  3003               	movlw	3
   412  07C9  00F7               	movwf	??_main+2
   413  07CA  308A               	movlw	138
   414  07CB  00F6               	movwf	??_main+1
   415  07CC  3055               	movlw	85
   416  07CD  00F5               	movwf	??_main
   417  07CE                     u97:	
   418  07CE  0BF5               	decfsz	??_main,f
   419  07CF  2FCE               	goto	u97
   420  07D0  0BF6               	decfsz	??_main+1,f
   421  07D1  2FCE               	goto	u97
   422  07D2  0BF7               	decfsz	??_main+2,f
   423  07D3  2FCE               	goto	u97
   424  07D4  2FD5               	nop2
   425  07D5                     l697:	
   426                           
   427                           ;newmain.c: 61:          }
   428  07D5  3001               	movlw	1
   429  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   430  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   431  07D8  07A8               	addwf	main@i,f
   432  07D9  1803               	skipnc
   433  07DA  0AA9               	incf	main@i+1,f
   434  07DB  3000               	movlw	0
   435  07DC  07A9               	addwf	main@i+1,f
   436  07DD                     l699:	
   437  07DD  0829               	movf	main@i+1,w
   438  07DE  3A80               	xorlw	128
   439  07DF  00FF               	movwf	btemp+1
   440  07E0  3080               	movlw	128
   441  07E1  027F               	subwf	btemp+1,w
   442  07E2  1D03               	skipz
   443  07E3  2FE6               	goto	u85
   444  07E4  3008               	movlw	8
   445  07E5  0228               	subwf	main@i,w
   446  07E6                     u85:	
   447  07E6  1C03               	skipc
   448  07E7  2FE9               	goto	u81
   449  07E8  2FEA               	goto	u80
   450  07E9                     u81:	
   451  07E9  2FBC               	goto	l693
   452  07EA                     u80:	
   453  07EA  2FB8               	goto	l687
   454  07EB  120A  118A  2800   	ljmp	start
   455  07EE                     __end_of_main:	
   456                           
   457                           	psect	text1
   458  0759                     __ptext1:	
   459 ;; *************** function _sendData *****************
   460 ;; Defined at:
   461 ;;		line 39 in file "newmain.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;  data            1    wreg     unsigned char 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  data            1    2[COMMON] unsigned char 
   466 ;;  i               2    3[COMMON] int 
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0, btemp+1
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         3       0       0       0       0
   478 ;;      Temps:          2       0       0       0       0
   479 ;;      Totals:         5       0       0       0       0
   480 ;;Total ram usage:        5 bytes
   481 ;; Hardware stack levels used:    1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           
   490                           ;psect for function _sendData
   491  0759                     _sendData:	
   492                           
   493                           ;incstack = 0
   494                           ; Regs used in _sendData: [wreg+status,2+status,0+btemp+1]
   495                           ;sendData@data stored from wreg
   496  0759  00F2               	movwf	sendData@data
   497  075A                     l659:	
   498                           
   499                           ;newmain.c: 40:     for(int i=0;i<8;i++){
   500  075A  01F3               	clrf	sendData@i
   501  075B  01F4               	clrf	sendData@i+1
   502  075C                     l665:	
   503                           
   504                           ;newmain.c: 41:         PORTCbits.RC1 = (data >> i) & 0x01;
   505  075C  0872               	movf	sendData@data,w
   506  075D  00F0               	movwf	??_sendData
   507  075E  0A73               	incf	sendData@i,w
   508  075F  2F62               	goto	u54
   509  0760                     u55:	
   510  0760  1003               	clrc
   511  0761  0CF0               	rrf	??_sendData,f
   512  0762                     u54:	
   513  0762  3EFF               	addlw	-1
   514  0763  1D03               	skipz
   515  0764  2F60               	goto	u55
   516  0765  0870               	movf	??_sendData,w
   517  0766  3901               	andlw	1
   518  0767  00F1               	movwf	??_sendData+1
   519  0768  0DF1               	rlf	??_sendData+1,f
   520  0769  1283               	bcf	3,5	;RP0=0, select bank0
   521  076A  1303               	bcf	3,6	;RP1=0, select bank0
   522  076B  0807               	movf	7,w	;volatile
   523  076C  0671               	xorwf	??_sendData+1,w
   524  076D  39FD               	andlw	-3
   525  076E  0671               	xorwf	??_sendData+1,w
   526  076F  0087               	movwf	7	;volatile
   527  0770                     l667:	
   528                           
   529                           ;newmain.c: 42:         PORTCbits.RC0 = 1;
   530  0770  1407               	bsf	7,0	;volatile
   531  0771                     l669:	
   532                           
   533                           ;newmain.c: 43:         _delay((unsigned long)((500)*(4000000/4000000.0)));
   534  0771  30A6               	movlw	166
   535  0772  00F0               	movwf	??_sendData
   536  0773                     u107:	
   537  0773  0BF0               	decfsz	??_sendData,f
   538  0774  2F73               	goto	u107
   539  0775  0000               	nop
   540  0776                     l671:	
   541                           
   542                           ;newmain.c: 44:         PORTCbits.RC0 = 0;
   543  0776  1283               	bcf	3,5	;RP0=0, select bank0
   544  0777  1303               	bcf	3,6	;RP1=0, select bank0
   545  0778  1007               	bcf	7,0	;volatile
   546  0779                     l673:	
   547                           
   548                           ;newmain.c: 45:         _delay((unsigned long)((500)*(4000000/4000000.0)));
   549  0779  30A6               	movlw	166
   550  077A  00F0               	movwf	??_sendData
   551  077B                     u117:	
   552  077B  0BF0               	decfsz	??_sendData,f
   553  077C  2F7B               	goto	u117
   554  077D  0000               	nop
   555  077E                     l675:	
   556                           
   557                           ;newmain.c: 46:     }
   558  077E  3001               	movlw	1
   559  077F  07F3               	addwf	sendData@i,f
   560  0780  1803               	skipnc
   561  0781  0AF4               	incf	sendData@i+1,f
   562  0782  3000               	movlw	0
   563  0783  07F4               	addwf	sendData@i+1,f
   564  0784                     l677:	
   565  0784  0874               	movf	sendData@i+1,w
   566  0785  3A80               	xorlw	128
   567  0786  00FF               	movwf	btemp+1
   568  0787  3080               	movlw	128
   569  0788  027F               	subwf	btemp+1,w
   570  0789  1D03               	skipz
   571  078A  2F8D               	goto	u65
   572  078B  3008               	movlw	8
   573  078C  0273               	subwf	sendData@i,w
   574  078D                     u65:	
   575  078D  1C03               	skipc
   576  078E  2F90               	goto	u61
   577  078F  2F91               	goto	u60
   578  0790                     u61:	
   579  0790  2F5C               	goto	l665
   580  0791                     u60:	
   581  0791                     l12:	
   582                           
   583                           ;newmain.c: 47:     PORTCbits.RC2 = 1;
   584  0791  1283               	bcf	3,5	;RP0=0, select bank0
   585  0792  1303               	bcf	3,6	;RP1=0, select bank0
   586  0793  1507               	bsf	7,2	;volatile
   587  0794                     l679:	
   588                           
   589                           ;newmain.c: 48:     _delay((unsigned long)((500)*(4000000/4000000.0)));
   590  0794  30A6               	movlw	166
   591  0795  00F0               	movwf	??_sendData
   592  0796                     u127:	
   593  0796  0BF0               	decfsz	??_sendData,f
   594  0797  2F96               	goto	u127
   595  0798  0000               	nop
   596  0799                     l681:	
   597                           
   598                           ;newmain.c: 49:     PORTCbits.RC2 = 0;
   599  0799  1283               	bcf	3,5	;RP0=0, select bank0
   600  079A  1303               	bcf	3,6	;RP1=0, select bank0
   601  079B  1107               	bcf	7,2	;volatile
   602  079C                     l13:	
   603  079C  0008               	return
   604  079D                     __end_of_sendData:	
   605  007E                     btemp	set	126	;btemp
   606  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     10      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sendData

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     182
                                              5 COMMON     4     4      0
                                              0 BANK0     10    10      0
                           _sendData
 ---------------------------------------------------------------------------------
 (1) _sendData                                             5     5      0      90
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _sendData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1B      12        0.0%
ABS                  0      0      1B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jun 06 06:31:25 2020

                      pc 0002              __CFG_CP$OFF 0000                       l12 0791  
                     l13 079C                       u60 0791                       u61 0790  
                     u54 0762                       u70 07AB                       u55 0760  
                     u80 07EA                       u65 078D                       u81 07E9  
                     u85 07E6                       u97 07CE                       fsr 0004  
                    l671 0776                      l681 0799                      l673 0779  
                    l665 075C                      l675 077E                      l667 0770  
                    l659 075A                      l683 079D                      l677 0784  
                    l669 0771                      l693 07BC                      l685 07A3  
                    l679 0794                      l695 07C8                      l687 07B8  
                    l697 07D5                      l699 07DD                      u107 0773  
                    u117 077B                      u127 0796             __CFG_CPD$OFF 0000  
                    fsr0 0004                      indf 0000             __CFG_IESO$ON 0000  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 079D                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000            __CFG_MCLRE$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _PORTC 0007  
                  _TRISC 0087                    main@i 0028                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0075           __CFG_PWRTE$OFF 0000  
       __end_of_sendData 079D  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 073E               __pmaintext 079D                ?_sendData 0070  
                __ptext1 0759                  main@led 0020     end_of_initialization 07FC  
             ??_sendData 0070                _PORTCbits 0007      start_initialization 07EE  
             init_fetch0 0746              __pdataBANK0 002A             sendData@data 0072  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_sendData 0044  
              main@F1296 002A                sendData@i 0073        __CFG_BOR4V$BOR40V 0000  
          __size_of_main 0051                 _sendData 0759                 init_ram0 074A  
